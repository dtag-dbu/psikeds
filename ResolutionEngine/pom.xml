<?xml version="1.0" encoding="UTF-8"?>
<!--
psiKeds :- ps induced knowledge entity delivery system

Copyright (c) 2013, 2014 Karsten Reincke, Marco Juliano, Deutsche Telekom AG

This file is free software: you can redistribute
it and/or modify it under the terms of the
[x] GNU Affero General Public License
[ ] GNU General Public License
[ ] GNU Lesser General Public License
[ ] Creatice Commons ShareAlike License

For details see file LICENSING in the top project directory
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.psikeds</groupId>
    <artifactId>psikeds</artifactId>
    <version>0.9.5-SNAPSHOT</version>
  </parent>

  <artifactId>ResolutionEngine</artifactId>
  <packaging>war</packaging>
  <name>ResolutionEngine</name>
  <description>The ResolutionEngine of psiKeds</description>

  <dependencies>
    <!-- Spring-Framework for DI -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${springframework.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- CXF for REST and SOAP -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${cxf.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <version>${cxf.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-providers</artifactId>
      <version>${cxf.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- JSON Parsing and Marshalling -->
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>${jackson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${jackson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- Helpers from Commons, e.g. Base64 or StringUtils -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons.codec.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons.lang.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- Other psiKeds Components -->
    <dependency>
      <groupId>org.psikeds</groupId>
      <artifactId>Common</artifactId>
      <version>${psikeds.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.psikeds</groupId>
      <artifactId>KnowledgeBase</artifactId>
      <version>${psikeds.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.psikeds</groupId>
      <artifactId>ReDataLayer</artifactId>
      <version>${psikeds.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.psikeds</groupId>
      <artifactId>ReInterfaces</artifactId>
      <version>${psikeds.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- JUnit is only required for running Tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <finalName>resolutionengine</finalName>

    <plugins>
      <!-- compiler plugin: control java version and memory settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${expected.java.version}</source>
          <target>${expected.java.version}</target>
          <compilerVersion>${expected.java.version}</compilerVersion>
          <debug>${psikeds.debug}</debug>
          <fork>true</fork>
          <meminitial>${webapp.mem.initial}</meminitial>
          <maxmem>${webapp.mem.max}</maxmem>
        </configuration>
      </plugin>
      <!-- eclipse plugin: control eclipse integration -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>${maven.eclipse.plugin.version}</version>
        <configuration>
          <projectNameTemplate>${eclipse.wtp.projectname.template}</projectNameTemplate>
          <wtpmanifest>true</wtpmanifest>
          <wtpapplicationxml>true</wtpapplicationxml>
          <wtpversion>${eclipse.wtp.version}</wtpversion>
          <wtpContextName>${project.build.finalName}</wtpContextName>
        </configuration>
      </plugin>
      <!-- war plugin: control how WAR-file is created -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven.war.plugin.version}</version>
        <configuration>
          <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
          <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
          <warName>${project.build.finalName}</warName>
        </configuration>
      </plugin>
      <!-- helper plugin: get an unused port for integration testing -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.helper.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <minPortNumber>10000</minPortNumber>
              <maxPortNumber>19999</maxPortNumber>
              <portNames>
                <portName>resolution.engine.server.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- tomcat7 plugin: control how to start and stop tomcat for integration testing -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>${tomcat7.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>start-tomcat</id>
            <goals>
              <goal>run-war</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <port>${resolution.engine.server.port}</port>
              <path>/${project.build.finalName}</path>
              <fork>true</fork>
              <meminitial>${webapp.mem.initial}</meminitial>
              <maxmem>${webapp.mem.max}</maxmem>
              <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
              <failOnError>true</failOnError>
              <systemProperties>
                <org.psikeds.config.dir>${basedir}/../config/</org.psikeds.config.dir>
              </systemProperties>
            </configuration>
          </execution>
          <execution>
            <id>stop-tomcat</id>
            <goals>
              <goal>shutdown</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <path>/${project.build.finalName}</path>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- failsafe plugin: control setup and execution of integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <workingDirectory>${basedir}</workingDirectory>
              <systemProperties>
                <org.psikeds.config.dir>${basedir}/../config/</org.psikeds.config.dir>
                <resolution.engine.base.url>http://localhost:${resolution.engine.server.port}/${project.build.finalName}/services/rest</resolution.engine.base.url>
              </systemProperties>
              <environmentVariables>
                <org.psikeds.config.dir>${basedir}/../config/</org.psikeds.config.dir>
                <resolution.engine.base.url>http://localhost:${resolution.engine.server.port}/${project.build.finalName}/services/rest</resolution.engine.base.url>
              </environmentVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

</project>
